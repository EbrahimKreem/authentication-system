{"version":3,"sources":["shared/ErrorMessage.js","shared/EmailField.js","shared/PasswordField.js","OAuth/queries.js","OAuth/mutations.js","OAuth/google.js","OAuth/facebook.js","shared/Form.js","Register/mutations.js","Register/queries.js","Register/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","formik__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","ErrorMessageHandler","_ref","field","a","createElement","name","msg","basic","color","pointing","size","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","formik__WEBPACK_IMPORTED_MODULE_2__","_ErrorMessage__WEBPACK_IMPORTED_MODULE_3__","Email","Fragment","Field","type","placeholder","Password","_useState","useState","_useState2","Object","_home_ebrahim_Documents_graphql_authentication_system_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","revealPass","setRevealPass","handleRevealPassword","e","react__WEBPACK_IMPORTED_MODULE_1___default","_ErrorMessage__WEBPACK_IMPORTED_MODULE_6__","formik__WEBPACK_IMPORTED_MODULE_5__","_ref2","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","assign","icon","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","circular","link","onClick","CURRENT_USER","gql","_templateObject","LOGIN_OR_REGISTER_WITH_GOOGLE","mutations_templateObject","LOGIN_OR_REGISTER_WITH_FACEBOOK","_templateObject2","GoogleAuth","path","history","setIsLoading","loginOrRegisterWithGoogle","useMutation","responseGoogle","_ref3","asyncToGenerator","regenerator_default","mark","_callee","profileObj","googleId","_ref4","data","wrap","_context","prev","next","variables","email","update","cache","_ref5","writeQuery","query","me","authGoogle","user","sent","localStorage","setItem","token","push","t0","stop","_x","apply","this","arguments","react_default","google_login","clientId","process","onSuccess","onFailure","render","renderProps","disabled","className","Icon","FacebookAuth","loginOrRegisterWithFacebook","facebookResponse","userID","facebookId","authFacebook","facebook_login_render_props_default","appId","autoLoad","fields","callback","Frm","showUserName","validationSchema","initialValues","onSubmit","_ref$showForgotPasswo","showForgotPasswordLink","_ref$path","slicedToArray","isLoading","formik_esm","props","Form","handleSubmit","loading","isSubmitting","ErrorMessage","EmailField","PasswordField","react_router_dom","to","style","float","paddingTop","Button","Divider","horizontal","google","facebook","REGISTER","queries_templateObject","RegisterSchema","Yup","shape","min","max","required","password","Register","addNewUser","useEffect","getItem","values","actions","register","setFieldError","setSubmitting","_x2","Segment","stacked","Header"],"mappings":"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","file":"static/js/8.5d4cdfea.chunk.js","sourcesContent":["import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport { Label } from 'semantic-ui-react';\n\nconst ErrorMessageHandler = ({ field }) => {\n  return (\n    <ErrorMessage name={field}>\n      {msg => (\n        <Label basic color=\"red\" pointing=\"below\" size=\"small\">\n          {msg}\n        </Label>\n      )}\n    </ErrorMessage>\n  );\n};\n\nexport default ErrorMessageHandler;\n","import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport { Field } from 'formik';\nimport ErrorMessageHandler from './ErrorMessage';\n\nconst Email = () => {\n  return (\n    <>\n      <ErrorMessageHandler field=\"email\" />\n      <Form.Field>\n        <Field type=\"email\" name=\"email\" placeholder=\"Email\" />\n      </Form.Field>\n    </>\n  );\n};\n\nexport default Email;\n","import React, { useState } from 'react';\nimport { Form, Input, Icon } from 'semantic-ui-react';\nimport { Field } from 'formik';\nimport ErrorMessageHandler from './ErrorMessage';\n\nconst Password = ({ placeholder, name }) => {\n  const [revealPass, setRevealPass] = useState(false);\n\n  const handleRevealPassword = e => setRevealPass(!revealPass);\n  return (\n    <>\n      <ErrorMessageHandler field={name ? name : 'password'} />\n      <Form.Field>\n        <Field type=\"password\" name={name ? name : 'password'}>\n          {({ field }) => {\n            return (\n              <Input\n                {...field}\n                type={revealPass ? 'text' : 'password'}\n                icon={\n                  <Icon\n                    name={revealPass ? 'eye' : 'eye slash'}\n                    circular\n                    link\n                    onClick={handleRevealPassword}\n                  />\n                }\n                placeholder={placeholder ? placeholder : 'Password'}\n              />\n            );\n          }}\n        </Field>\n      </Form.Field>\n    </>\n  );\n};\n\nexport default Password;\n","import gql from 'graphql-tag';\n\nexport const CURRENT_USER = gql`\n  {\n    me {\n      _id\n      name\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const LOGIN_OR_REGISTER_WITH_GOOGLE = gql`\n  mutation($data: AuthGoogleInput!) {\n    authGoogle(data: $data) {\n      user {\n        _id\n        name\n      }\n      token\n    }\n  }\n`;\n\nexport const LOGIN_OR_REGISTER_WITH_FACEBOOK = gql`\n  mutation($data: AuthFacebookInput!) {\n    authFacebook(data: $data) {\n      token\n      user {\n        _id\n        name\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { useMutation } from 'react-apollo-hooks';\nimport { Icon } from 'semantic-ui-react';\n\nimport { CURRENT_USER } from './queries';\nimport { LOGIN_OR_REGISTER_WITH_GOOGLE } from './mutations';\n\nconst GoogleAuth = ({ path, history, setIsLoading }) => {\n  const loginOrRegisterWithGoogle = useMutation(\n   LOGIN_OR_REGISTER_WITH_GOOGLE\n  );\n\n  const responseGoogle = async ({ profileObj, googleId }) => {\n    try {\n      const { data } = await loginOrRegisterWithGoogle({\n        variables: {\n          data: {\n            name: profileObj.name,\n            googleId,\n            email: profileObj.email\n          },\n        },\n        update: (cache, { data }) => {\n          cache.writeQuery({\n            query: CURRENT_USER,\n            data: {\n              me: data.authGoogle.user,\n            },\n          });\n        },\n      });\n      localStorage.setItem('token', data.authGoogle.token);\n      history.push('/authentication-system/secret');\n    } catch (error) {\n      setIsLoading(false);\n    }\n  };\n  return (\n    <GoogleLogin\n      clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n      onSuccess={responseGoogle}\n      onFailure={responseGoogle}\n      render={renderProps => (\n        <button\n          onClick={()=> {\n            setIsLoading(true)\n            renderProps.onClick()\n          }}\n          disabled={renderProps.disabled}\n          className=\"ui google plus labeled icon button\"\n          type=\"button\"\n        >\n\n          <Icon name=\"google\" /> {path} With Google\n        </button>\n      )}\n    />\n  );\n};\n\nexport default GoogleAuth;\n","import React from \"react\";\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\nimport { useMutation } from \"react-apollo-hooks\";\n\nimport { LOGIN_OR_REGISTER_WITH_FACEBOOK } from \"./mutations\";\nimport { CURRENT_USER } from \"./queries\";\nimport { Icon } from \"semantic-ui-react\";\n\nconst FacebookAuth = ({ path, history, setIsLoading }) => {\n  const loginOrRegisterWithFacebook = useMutation(\n    LOGIN_OR_REGISTER_WITH_FACEBOOK\n  );\n  const facebookResponse = async ({ name, userID }) => {\n    try {\n      const { data } = await loginOrRegisterWithFacebook({\n        variables: {\n          data: {\n            email: userID,\n            name,\n            facebookId: userID\n          }\n        },\n        update: (cache, { data }) => {\n          cache.writeQuery({\n            query: CURRENT_USER,\n            data: {\n              me: data.authFacebook.user\n            }\n          });\n        }\n      });\n      localStorage.setItem(\"token\", data.authFacebook.token);\n      history.push(\"/authentication-system/secret\");\n    } catch (error) {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <FacebookLogin\n      appId={process.env.REACT_APP_FACEBOOK_APP_ID}\n      autoLoad={false}\n      fields=\"name,email,picture\"\n      callback={facebookResponse}\n      render={renderProps => (\n        <button\n          onClick={() => {\n            setIsLoading(true);\n            renderProps.onClick();\n          }}\n          disabled={renderProps.disabled}\n          className=\"ui facebook right floated labeled icon button\"\n          type=\"button\"\n        >\n          <Icon name=\"facebook f\" /> {path} With Facebook\n        </button>\n      )}\n    />\n  );\n};\n\nexport default FacebookAuth;\n","import React, { useState } from 'react';\nimport { Form, Button, Divider } from 'semantic-ui-react';\nimport { Formik, Field } from 'formik';\nimport { Link } from 'react-router-dom';\n\nimport Email from './EmailField';\nimport Password from './PasswordField';\nimport ErrorMessageHandler from './ErrorMessage';\nimport GoogleAuth from 'OAuth/google';\nimport FacebookAuth from 'OAuth/facebook';\n\nconst Frm = ({\n  showUserName,\n  validationSchema,\n  initialValues,\n  onSubmit,\n  showForgotPasswordLink = false,\n  path = 'Register',\n  history,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  \n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {props => {\n        return (\n          <Form onSubmit={props.handleSubmit} loading={props.isSubmitting || isLoading}>\n            {showUserName ? (\n              <>\n                <ErrorMessageHandler field=\"name\" />\n                <Form.Field>\n                  <Field type=\"text\" name=\"name\" placeholder=\"Username\" />\n                </Form.Field>\n              </>\n            ) : null}\n            <Email />\n            <Password />\n            {showForgotPasswordLink ? (\n              <Link\n                to=\"/authentication-system/forgot-password\"\n                style={{ float: 'right', paddingTop: 9 }}\n              >\n                Forgot Password?\n              </Link>\n            ) : null}\n            <Button type=\"submit\" basic>\n              Submit\n            </Button>\n            <Divider horizontal>\n              <p>\n                <em>OR</em>\n              </p>\n            </Divider>\n            <GoogleAuth path={path} history={history} setIsLoading={setIsLoading}/>\n            <FacebookAuth path={path} history={history} setIsLoading={setIsLoading}/>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default Frm;\n","import gql from 'graphql-tag';\n\nexport const REGISTER = gql`\n  mutation($data: RegisterInputType!) {\n    register(data: $data) {\n      user {\n        name\n        _id\n      }\n      token\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const CURRENT_USER = gql`\n  {\n    me {\n      _id\n      name\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useMutation } from 'react-apollo-hooks';\nimport * as Yup from 'yup';\nimport { Segment, Divider, Header } from 'semantic-ui-react';\n\nimport Form from 'shared/Form';\nimport { REGISTER } from './mutations';\nimport { CURRENT_USER } from './queries';\n\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(20, 'Too Long!')\n    .required('Required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Required'),\n  password: Yup.string()\n    .min(8, 'Too Short!')\n    .max(30, 'Too Long!')\n    .required('Required'),\n});\n\nconst Register = props => {\n  const addNewUser = useMutation(REGISTER);\n\n  useEffect(() => {\n    if (localStorage.getItem('token')) props.history.push('/secret');\n  }, []);\n\n  const onSubmit = async (values, actions) => {\n    try {\n      const { data } = await addNewUser({\n        variables: { data: values },\n        update: (cache, { data }) => {\n          cache.writeQuery({\n            query: CURRENT_USER,\n            data: {\n              me: data.register.user,\n            },\n          });\n        },\n      });\n      localStorage.setItem('token', data.register.token);\n      props.history.push('/secret');\n    } catch (error) {\n      actions.setFieldError('email', 'Email is in use please try another one');\n      actions.setSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"frm\">\n      <Segment stacked>\n        <Divider horizontal>\n          <Header>\n            <em>Register</em>\n          </Header>\n        </Divider>\n        <Form\n          showUserName={true}\n          initialValues={{ name: '', email: '', password: '' }}\n          validationSchema={RegisterSchema}\n          onSubmit={onSubmit}\n          {...props}\n        />\n      </Segment>\n    </div>\n  );\n};\n\nexport default Register;\n"],"sourceRoot":""}