{"version":3,"sources":["Navbar/index.js","Root.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Segment","Menu","secondary","position","localStorage","getItem","Fragment","Button","color","inverted","onClick","removeItem","history","push","Item","as","Link","to","Login","lazy","Promise","all","__webpack_require__","e","then","bind","Register","Secret","ForgotPassword","NotFound","ChangePassword","App","react_router","component","react","fallback","Loader","active","inline","size","style","marginTop","exact","from","path","httpLink","createHttpLink","uri","process","authLink","setContext","_","_ref","headers","token","Object","objectSpread","authorization","concat","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","ApolloContext","react_router_dom","Root","document","getElementById"],"mappings":"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","file":"static/js/main.5ac1ce93.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu, Segment, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = props => {\n  const handleLogoutClick = () => {\n    localStorage.removeItem('token');\n    props.history.push('/register');\n  };\n\n  return (\n    <Segment>\n      <Menu secondary>\n        <Menu.Menu position=\"right\">\n          {!localStorage.getItem('token') ? (\n            <>\n              <Menu.Item as={Link} to=\"/authentication-system/login\">\n                Login\n              </Menu.Item>\n              <Menu.Item as={Link} to=\"/authentication-system/register\">\n                Register\n              </Menu.Item>\n            </>\n          ) : (\n            <>\n              <Button color=\"red\" inverted onClick={handleLogoutClick}>\n                Logout\n              </Button>\n            </>\n          )}\n        </Menu.Menu>\n      </Menu>\n    </Segment>\n  );\n};\n\nexport default Navbar;\n","import React, { lazy, Suspense } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Navbar from \"Navbar\";\nimport { Loader } from \"semantic-ui-react\";\n\nconst Login = lazy(() => import(\"Login\"));\nconst Register = lazy(() => import(\"Register\"));\nconst Secret = lazy(() => import(\"Secret\"));\nconst ForgotPassword = lazy(() => import(\"Forgot-Password\"));\nconst NotFound = lazy(() => import(\"Notfound\"));\nconst ChangePassword = lazy(() => import(\"./Change-Password\"));\n\nconst App = () => {\n  return (\n    <div>\n      <Route component={Navbar} />\n\n      <Suspense\n        fallback={\n          <Loader\n            active={true}\n            inline=\"centered\"\n            size=\"large\"\n            style={{ marginTop: 200 }}\n          />\n        }\n      >\n        <Switch>\n          <Redirect exact from=\"/authentication-system\" to=\"/authentication-system/register\" />\n          <Route exact path=\"/authentication-system/login\" component={Login} />\n          <Route exact path=\"/authentication-system/register\" component={Register} />\n          <Route exact path=\"/authentication-system/secret\" component={Secret} />\n          <Route exact path=\"/authentication-system/forgot-password\" component={ForgotPassword} />\n          <Route exact path=\"/authentication-system/reset/:token\" component={ChangePassword} />\n          <Route component={NotFound} />\n        </Switch>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./Root\";\nimport './style.css';\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst httpLink = createHttpLink({\n  uri: process.env.REACT_APP_URI\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"token\");\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n      <Root />\n    </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}