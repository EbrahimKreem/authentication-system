{"version":3,"sources":["shared/ErrorMessage.js","shared/PasswordField.js","shared/Portal.js","../node_modules/semantic-ui-react/dist/es/elements/Divider/Divider.js","Change-Password/mutations.tsx","Change-Password/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","formik__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","ErrorMessageHandler","_ref","field","a","createElement","name","msg","basic","color","pointing","size","Password","placeholder","_useState","useState","_useState2","Object","_home_ebrahim_Documents_graphql_authentication_system_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","revealPass","setRevealPass","handleRevealPassword","e","react__WEBPACK_IMPORTED_MODULE_1___default","Fragment","_ErrorMessage__WEBPACK_IMPORTED_MODULE_6__","Field","formik__WEBPACK_IMPORTED_MODULE_5__","type","_ref2","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","assign","icon","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","circular","link","onClick","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","PortalCMP","content","show","close","onClose","open","raised","style","left","position","top","marginRight","zIndex","float","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_lib__WEBPACK_IMPORTED_MODULE_4__","_lib__WEBPACK_IMPORTED_MODULE_5__","_lib__WEBPACK_IMPORTED_MODULE_6__","_lib__WEBPACK_IMPORTED_MODULE_7__","Divider","props","children","className","clearing","fitted","hidden","horizontal","inverted","section","vertical","classes","rest","ElementType","isNil","handledProps","propTypes","__webpack_exports__","CHANGE_PASSWORD","gql","_templateObject","ResetPasswordSchema","Yup","shape","password","min","max","required","confirmPassword","ChangePassword","changePassword","useMutation","slicedToArray","showPortal","setShowPortal","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","values","actions","data","wrap","_context","prev","next","setSubmitting","abrupt","setFieldError","variables","token","match","params","sent","localStorage","setItem","history","push","t0","stop","_x","_x2","apply","this","arguments","react_default","formik_esm","initialValues","validationSchema","Portal","Segment","Form","handleSubmit","loading","isSubmitting","Header","PasswordField","Button"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,IAgBeK,IAZa,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MAC7B,OACEN,EAAAO,EAAAC,cAACN,EAAA,EAAD,CAAcO,KAAMH,GACjB,SAAAI,GAAG,OACFV,EAAAO,EAAAC,cAACL,EAAA,EAAD,CAAOQ,OAAK,EAACC,MAAM,MAAMC,SAAS,QAAQC,KAAK,SAC5CJ,iHC4BIK,IAhCE,SAAAV,GAA2B,IAAxBW,EAAwBX,EAAxBW,YAAaP,EAAWJ,EAAXI,KAAWQ,EACNC,oBAAS,GADHC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnCK,EADmCH,EAAA,GACvBI,EADuBJ,EAAA,GAGpCK,EAAuB,SAAAC,GAAC,OAAIF,GAAeD,IACjD,OACEI,EAAAnB,EAAAC,cAAAkB,EAAAnB,EAAAoB,SAAA,KACED,EAAAnB,EAAAC,cAACoB,EAAA,EAAD,CAAqBtB,MAAOG,GAAc,aAC1CiB,EAAAnB,EAAAC,cAACL,EAAA,EAAK0B,MAAN,KACEH,EAAAnB,EAAAC,cAACsB,EAAA,EAAD,CAAOC,KAAK,WAAWtB,KAAMA,GAAc,YACxC,SAAAuB,GAAe,IAAZ1B,EAAY0B,EAAZ1B,MACF,OACEoB,EAAAnB,EAAAC,cAACyB,EAAA,EAADb,OAAAc,OAAA,GACM5B,EADN,CAEEyB,KAAMT,EAAa,OAAS,WAC5Ba,KACET,EAAAnB,EAAAC,cAAC4B,EAAA,EAAD,CACE3B,KAAMa,EAAa,MAAQ,YAC3Be,UAAQ,EACRC,MAAI,EACJC,QAASf,IAGbR,YAAaA,GAA4B,qDC3BzD,IAAAlB,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAA0C,EAAAzC,EAAA,KAAAI,EAAAJ,EAAA,KAAAkC,EAAAlC,EAAA,IA6Be0C,IA1BG,SAAApC,GAA8B,IAA3BqC,EAA2BrC,EAA3BqC,QAASC,EAAkBtC,EAAlBsC,KAAMC,EAAYvC,EAAZuC,MAClC,OACE5C,EAAAO,EAAAC,cAACgC,EAAA,EAAD,CAAQK,QAASD,EAAOE,KAAMH,GAC5B3C,EAAAO,EAAAC,cAACL,EAAA,EAAD,CACE4C,QAAM,EACNC,MAAO,CACLC,KAAM,MACNC,SAAU,QACVC,IAAK,MACLC,YAAa,OACbC,OAAQ,MAGVrD,EAAAO,EAAAC,cAACyB,EAAA,EAAD,CACExB,KAAK,QACL4B,UAAQ,EACRC,MAAI,EACJU,MAAO,CAAEM,MAAO,SAChBf,QAASK,IAEX5C,EAAAO,EAAAC,cAAA,KAAGwC,MAAO,CAAEpC,MAAO,YAAc8B,wCCvBzC,IAAAa,EAAAxD,EAAA,GAAAyD,EAAAzD,EAAAE,EAAAsD,GAAAE,EAAA1D,EAAA,GAAA2D,EAAA3D,EAAAE,EAAAwD,GAAAE,GAAA5D,EAAA,GAAAA,EAAA,IAAA6D,EAAA7D,EAAAE,EAAA0D,GAAAE,EAAA9D,EAAA,IAAA+D,EAAA/D,EAAA,IAAAgE,EAAAhE,EAAA,IAAAiE,EAAAjE,EAAA,GASA,SAAAkE,EAAAC,GACA,IAAAC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,UACAC,EAAAH,EAAAG,SACA3B,EAAAwB,EAAAxB,QACA4B,EAAAJ,EAAAI,OACAC,EAAAL,EAAAK,OACAC,EAAAN,EAAAM,WACAC,EAAAP,EAAAO,SACAC,EAAAR,EAAAQ,QACAC,EAAAT,EAAAS,SACAC,EAAgBlB,IAAE,KAAOtC,OAAAyC,EAAA,EAAAzC,CAAUiD,EAAA,YAAwBjD,OAAAyC,EAAA,EAAAzC,CAAUkD,EAAA,UAAoBlD,OAAAyC,EAAA,EAAAzC,CAAUmD,EAAA,UAAoBnD,OAAAyC,EAAA,EAAAzC,CAAUoD,EAAA,cAA4BpD,OAAAyC,EAAA,EAAAzC,CAAUqD,EAAA,YAAwBrD,OAAAyC,EAAA,EAAAzC,CAAUsD,EAAA,WAAsBtD,OAAAyC,EAAA,EAAAzC,CAAUuD,EAAA,sBAAAP,GACzOS,EAAazD,OAAA0C,EAAA,EAAA1C,CAAiB6C,EAAAC,GAC9BY,EAAoB1D,OAAA2C,EAAA,EAAA3C,CAAc6C,EAAAC,GAClC,OAASN,EAAArD,EAAKC,cAAAsE,EAA4BtB,IAAQ,GAAGqB,EAAA,CACrDT,UAAAQ,IACMZ,EAAA,EAAae,MAAAZ,GAAAzB,EAAAyB,GAGnBF,EAAAe,aAAA,kHACAf,EAAAgB,UAiCC,GACcC,EAAA,8bC7DR,IAAMC,QAAkBC,GAAHC,uBCQtBC,EAAsBC,WAAaC,MAAM,CAC7CC,SAAUF,WACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,gBAAiBN,WACdG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,cAoECE,UAjEQ,SAAA5B,GACrB,IAAM6B,EAAiBC,YAAYb,GADLlE,EAEMC,oBAAS,GAFfC,EAAAC,OAAA6E,EAAA,EAAA7E,CAAAH,EAAA,GAEvBiF,EAFuB/E,EAAA,GAEXgF,EAFWhF,EAAA,GAIxBiF,EAAQ,eAAA/F,EAAAe,OAAAiF,EAAA,EAAAjF,CAAAkF,EAAA/F,EAAAgG,KAAG,SAAAC,EAAOC,EAAQC,GAAf,IAAA1E,EAAA2E,EAAA,OAAAL,EAAA/F,EAAAqG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACXN,EAAOhB,WAAagB,EAAOZ,gBADhB,CAAAgB,EAAAE,KAAA,eAEbL,EAAQM,eAAc,GAFTH,EAAAI,OAAA,SAGNP,EAAQQ,cAAc,kBAAmB,2BAHnC,cAAAL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAOUhB,EAAe,CACpCoB,UAAW,CACT1B,SAAUgB,EAAOhB,SACjB2B,MAAOlD,EAAMmD,MAAMC,OAAOF,SAVjB,OAAApF,EAAA6E,EAAAU,KAOLZ,EAPK3E,EAOL2E,KAMRa,aAAaC,QAAQ,QAASd,EAAKZ,eAAeqB,OAClDlD,EAAMwD,QAAQC,KAAK,WAdNd,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,SAgBbV,GAAc,GACdO,EAAQM,eAAc,GAjBT,yBAAAH,EAAAgB,SAAArB,EAAA,kBAAH,gBAAAsB,EAAAC,GAAA,OAAA1H,EAAA2H,MAAAC,KAAAC,YAAA,GAqBd,OACEC,EAAA5H,EAAAC,cAAC4H,EAAA,EAAD,CACEC,cAAe,CAAE5C,SAAU,GAAII,gBAAiB,IAChDyC,iBAAkBhD,EAClBc,SAAUA,GAET,SAAAlC,GACC,OACEiE,EAAA5H,EAAAC,cAAA,OAAK4D,UAAU,OACZ8B,EACCiC,EAAA5H,EAAAC,cAAC+H,EAAA,EAAD,CACE5F,KAAMuD,EACNtD,MAAO,kBAAMuD,GAAc,IAC3BzD,QAAQ,mDAER,KACJyF,EAAA5H,EAAAC,cAACgI,EAAA,EAAD,KACEL,EAAA5H,EAAAC,cAACiI,EAAA,EAAD,CAAMrC,SAAUlC,EAAMwE,aAAcC,QAASzE,EAAM0E,cACjDT,EAAA5H,EAAAC,cAACyD,EAAA,EAAD,CAASO,YAAU,GACjB2D,EAAA5H,EAAAC,cAACqI,EAAA,EAAD,KACEV,EAAA5H,EAAAC,cAAA,8BAGJ2H,EAAA5H,EAAAC,cAACsI,EAAA,EAAD,MACAX,EAAA5H,EAAAC,cAACsI,EAAA,EAAD,CACE9H,YAAY,mBACZP,KAAK,oBAEP0H,EAAA5H,EAAAC,cAACuI,EAAA,EAAD,CAAQhH,KAAK,SAASpB,OAAK,GAA3B","file":"static/js/6.e095dbbd.chunk.js","sourcesContent":["import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport { Label } from 'semantic-ui-react';\n\nconst ErrorMessageHandler = ({ field }) => {\n  return (\n    <ErrorMessage name={field}>\n      {msg => (\n        <Label basic color=\"red\" pointing=\"below\" size=\"small\">\n          {msg}\n        </Label>\n      )}\n    </ErrorMessage>\n  );\n};\n\nexport default ErrorMessageHandler;\n","import React, { useState } from 'react';\nimport { Form, Input, Icon } from 'semantic-ui-react';\nimport { Field } from 'formik';\nimport ErrorMessageHandler from './ErrorMessage';\n\nconst Password = ({ placeholder, name }) => {\n  const [revealPass, setRevealPass] = useState(false);\n\n  const handleRevealPassword = e => setRevealPass(!revealPass);\n  return (\n    <>\n      <ErrorMessageHandler field={name ? name : 'password'} />\n      <Form.Field>\n        <Field type=\"password\" name={name ? name : 'password'}>\n          {({ field }) => {\n            return (\n              <Input\n                {...field}\n                type={revealPass ? 'text' : 'password'}\n                icon={\n                  <Icon\n                    name={revealPass ? 'eye' : 'eye slash'}\n                    circular\n                    link\n                    onClick={handleRevealPassword}\n                  />\n                }\n                placeholder={placeholder ? placeholder : 'Password'}\n              />\n            );\n          }}\n        </Field>\n      </Form.Field>\n    </>\n  );\n};\n\nexport default Password;\n","import React from 'react';\nimport { Portal, Segment, Icon } from 'semantic-ui-react';\n\nconst PortalCMP = ({ content, show, close }) => {\n  return (\n    <Portal onClose={close} open={show}>\n      <Segment\n        raised\n        style={{\n          left: '80%',\n          position: 'fixed',\n          top: '10%',\n          marginRight: '20px',\n          zIndex: 1000,\n        }}\n      >\n        <Icon\n          name=\"close\"\n          circular\n          link\n          style={{ float: 'right' }}\n          onClick={close}\n        />\n        <p style={{ color: '#576366' }}>{content}</p>\n      </Segment>\n    </Portal>\n  );\n};\n\nexport default PortalCMP;\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A divider visually segments content into groups.\n */\n\nfunction Divider(props) {\n  var children = props.children,\n      className = props.className,\n      clearing = props.clearing,\n      content = props.content,\n      fitted = props.fitted,\n      hidden = props.hidden,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      section = props.section,\n      vertical = props.vertical;\n  var classes = cx('ui', useKeyOnly(clearing, 'clearing'), useKeyOnly(fitted, 'fitted'), useKeyOnly(hidden, 'hidden'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(section, 'section'), useKeyOnly(vertical, 'vertical'), 'divider', className);\n  var rest = getUnhandledProps(Divider, props);\n  var ElementType = getElementType(Divider, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nDivider.handledProps = [\"as\", \"children\", \"className\", \"clearing\", \"content\", \"fitted\", \"hidden\", \"horizontal\", \"inverted\", \"section\", \"vertical\"];\nDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Divider can clear the content above it. */\n  clearing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Divider can be fitted without any space above or below it. */\n  fitted: PropTypes.bool,\n\n  /** Divider can divide content without creating a dividing line. */\n  hidden: PropTypes.bool,\n\n  /** Divider can segment content horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Divider can have its colours inverted. */\n  inverted: PropTypes.bool,\n\n  /** Divider can provide greater margins to divide sections of content. */\n  section: PropTypes.bool,\n\n  /** Divider can segment content vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Divider;","import gql from 'graphql-tag';\n\nexport const CHANGE_PASSWORD = gql`\n  mutation($password: String!, $token: String!) {\n    changePassword(password: $password, token: $token) {\n      user {\n        _id\n        name\n      }\n      token\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport { Form, Button, Segment, Divider, Header } from 'semantic-ui-react';\nimport * as Yup from 'yup';\nimport { useMutation } from 'react-apollo-hooks';\n\nimport { CHANGE_PASSWORD } from './mutations';\nimport Password from 'shared/PasswordField';\nimport Portal from 'shared/Portal';\n\nconst ResetPasswordSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(8, 'Too Short!')\n    .max(30, 'Too Long!')\n    .required('Required'),\n  confirmPassword: Yup.string()\n    .min(8, 'Too Short!')\n    .max(30, 'Too Long!')\n    .required('Required'),\n});\n\nconst ChangePassword = props => {\n  const changePassword = useMutation(CHANGE_PASSWORD);\n  const [showPortal, setShowPortal] = useState(false);\n\n  const onSubmit = async (values, actions) => {\n    if (values.password !== values.confirmPassword) {\n      actions.setSubmitting(false);\n      return actions.setFieldError('confirmPassword', 'Password did not match');\n    }\n\n    try {\n      const { data } = await changePassword({\n        variables: {\n          password: values.password,\n          token: props.match.params.token,\n        },\n      });\n      localStorage.setItem('token', data.changePassword.token);\n      props.history.push('/secret');\n    } catch (error) {\n      setShowPortal(true);\n      actions.setSubmitting(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ password: '', confirmPassword: '' }}\n      validationSchema={ResetPasswordSchema}\n      onSubmit={onSubmit}\n    >\n      {props => {\n        return (\n          <div className=\"frm\">\n            {showPortal ? (\n              <Portal\n                show={showPortal}\n                close={() => setShowPortal(false)}\n                content=\"Password reset token is invalid or has expired\"\n              />\n            ) : null}\n            <Segment>\n              <Form onSubmit={props.handleSubmit} loading={props.isSubmitting}>\n                <Divider horizontal>\n                  <Header>\n                    <em>Reset Password</em>\n                  </Header>\n                </Divider>\n                <Password />\n                <Password\n                  placeholder=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                />\n                <Button type=\"submit\" basic>\n                  Submit\n                </Button>\n              </Form>\n            </Segment>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default ChangePassword;\n"],"sourceRoot":""}